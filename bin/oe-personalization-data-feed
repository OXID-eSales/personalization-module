#!/usr/bin/env php
<?php
/**
 * Copyright Â© OXID eSales AG. All rights reserved.
 * See LICENSE file for license details.
 */

bootstrapShop();

if (!\OxidEsales\Eshop\Core\Registry::getConfig()->getActiveView()->getViewConfig()->isModuleActive('oepersonalization')) {
    exit('Please activate the "OXID personalization powered by Econda" module before running the script.' . "\n");
}

$config = getConfigurationParameters($argv);

$_POST['blExportVars'] = (isset($config['exportVariants'])) ? $config['exportVariants'] : false;
$_POST['blExportMainVars'] = (isset($config['exportVariantsParentProduct'])) ? $config['exportVariantsParentProduct'] : true;
$_POST['acat'] = (isset($config['exportCategories'])) ? $config['exportCategories'] : [];
$_POST['sExportMinStock'] = (isset($config['exportMinStock'])) ? $config['exportMinStock'] : 1;
$exportPath = (isset($config['exportPath'])) ? $config['exportPath'] : null;

/** @var OxidEsales\PersonalizationModule\Application\Controller\Admin\Tab\ExportTabController $export */
$export = oxNew(OxidEsales\PersonalizationModule\Application\Controller\Admin\Tab\ExportTabController::class, null, $exportPath);

$export->executeExport();

$exportMessage = getExportMessage($export);
print($exportMessage . "\n");
exit(0);

/**
 * @param array $argv
 *
 * @return string
 */
function getConfigFile($argv)
{
    $configFile = \OxidEsales\Eshop\Core\Registry::getConfig()->getActiveView()->getViewConfig()->getModulePath('oepersonalization', 'config/params.php');
    array_shift($argv);
    if (isset($argv[0])) {
        if ($argv[0] === '--config') {
            $configFile = (isset($argv[1])) ? $argv[1] : '';
            if (!file_exists($configFile)) {
                exit('File does not exist: ' . $configFile . "\n");
            }
        } else {
            $message = 'Unknown command: ' . $argv[0] .
                '. If you want to override the configuration file for the export, please, use the "--config" command' .
                "\n";
            exit($message);
        }
    }

    // read config && params
    if (!file_exists($configFile)) {
        exit('Config file is missing: ' . $configFile . "\n");
    }
    return $configFile;
}

/**
 * @param array $argv
 *
 * @return array
 */
function getConfigurationParameters($argv)
{
    $configFile = getConfigFile($argv);

    $config = include $configFile;

    if (!is_array($config)) {
        exit('Config file has wrong format.'."\n");
    }

    return $config;
}

/**
 * @param \OxidEsales\PersonalizationModule\Application\Controller\Admin\Tab\ExportTabController $export
 *
 * @return string
 */
function getExportMessage($export)
{
    $isExportSuccessful = $export->isExportSuccessful();
    if ($isExportSuccessful === true) {
        $message = 'Export completed.';
    } else {
        $message = 'Not able to execute export.';
    }

    return $message;
}

/**
 * Try to call eShop bootstrap.php file
 */
function bootstrapShop()
{
    $bootstrapFileName = getenv('ESHOP_BOOTSTRAP_PATH');
    if (!empty($bootstrapFileName)) {
        $bootstrapFileName = realpath(trim(getenv('ESHOP_BOOTSTRAP_PATH')));
    } else {
        $count = 0;
        $bootstrapFileName = 'source/bootstrap.php';
        $currentDirectory = __DIR__ . '/';
        while ($count < 5) {
            $count++;
            if (file_exists($currentDirectory . $bootstrapFileName)) {
                $bootstrapFileName = $currentDirectory . $bootstrapFileName;
                break;
            }
            $bootstrapFileName = '../' . $bootstrapFileName;
        }
    }

    if (!(file_exists($bootstrapFileName) && !is_dir($bootstrapFileName))) {
        $items = [
            "Unable to find eShop bootstrap.php file.",
            "You can override the path by using ESHOP_BOOTSTRAP_PATH environment variable.",
            "\n"
        ];

        $message = implode(" ", $items);

        die($message);
    }
    require_once($bootstrapFileName);
}
